buildscript {
	repositories {
		maven {
			name = "Fabric"
			url = "https://maven.fabricmc.net/"
		}
        mavenCentral()
		maven { 
			name = "Jitpack"
			url = "https://jitpack.io/"
		}
	}
	dependencies {
		//SinÂ² Edition Loom
		classpath 'com.github.Chocohead.Fabric-Loom:fabric-loom:361cd1c'
	}
}


apply plugin: net.fabricmc.loom.LoomGradlePlugin
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name + '-' + project.minecraft_version_out
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url 'https://masa.dy.fi/maven' }
    // maven { url 'https://maven.terraformersmc.com/releases/' }
    maven { url 'https://maven.quiltmc.org/repository/release/' }
}


dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.mappings_version}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"

    modImplementation "fi.dy.masa.malilib:malilib-fabric-${project.minecraft_version}:${project.malilib_version}"
    modImplementation "com.google.code.findbugs:jsr305:3+"
    // Fabric API. This is technically optional, but you probably want it anyway.
    //modCompile "net.fabricmc.fabric-api:fabric-api:" + project.fabric_version

    modCompileOnly "carpet:fabric-carpet:${project.fabric_carpet_version}"

    modCompileOnly "com.terraformersmc:modmenu:${project.mod_menu_version}"
}

compileJava {
    mappings {
        from = 'named'
		to = 'intermediary'
        method 'net/optifine/BlockPosM', '(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/BlockPos;)Ljava/lang/Iterable;', 'getAllInBoxMutable', 'getAllInBoxMutable'
    }
}

processResources {
    inputs.property "mod_version", project.mod_version

    filesMatching("fabric.mod.json") {
        expand "mod_version": project.mod_version
    }
}

jar {
    exclude('net/optifine/**')   
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
    options.release = 16
}


jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}